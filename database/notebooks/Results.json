[
  {
    "SPECIFIC_CATALOG": "bus-db",
    "SPECIFIC_SCHEMA": "web",
    "SPECIFIC_NAME": "AddBusData",
    "ROUTINE_CATALOG": "bus-db",
    "ROUTINE_SCHEMA": "web",
    "ROUTINE_NAME": "AddBusData",
    "ROUTINE_TYPE": "PROCEDURE",
    "MODULE_CATALOG": "NULL",
    "MODULE_SCHEMA": "NULL",
    "MODULE_NAME": "NULL",
    "UDT_CATALOG": "NULL",
    "UDT_SCHEMA": "NULL",
    "UDT_NAME": "NULL",
    "DATA_TYPE": "NULL",
    "CHARACTER_MAXIMUM_LENGTH": "NULL",
    "CHARACTER_OCTET_LENGTH": "NULL",
    "COLLATION_CATALOG": "NULL",
    "COLLATION_SCHEMA": "NULL",
    "COLLATION_NAME": "NULL",
    "CHARACTER_SET_CATALOG": "NULL",
    "CHARACTER_SET_SCHEMA": "NULL",
    "CHARACTER_SET_NAME": "NULL",
    "NUMERIC_PRECISION": "NULL",
    "NUMERIC_PRECISION_RADIX": "NULL",
    "NUMERIC_SCALE": "NULL",
    "DATETIME_PRECISION": "NULL",
    "INTERVAL_TYPE": "NULL",
    "INTERVAL_PRECISION": "NULL",
    "TYPE_UDT_CATALOG": "NULL",
    "TYPE_UDT_SCHEMA": "NULL",
    "TYPE_UDT_NAME": "NULL",
    "SCOPE_CATALOG": "NULL",
    "SCOPE_SCHEMA": "NULL",
    "SCOPE_NAME": "NULL",
    "MAXIMUM_CARDINALITY": "NULL",
    "DTD_IDENTIFIER": "NULL",
    "ROUTINE_BODY": "SQL",
    "ROUTINE_DEFINITION": "/*\r\n\tAdd received Bus geolocation data and check if buses are\r\n\tinside any defined GeoFence. JSON must be like:\r\n\r\n\t{\r\n\t\t\"DirectionId\": 1,\r\n\t\t\"RouteId\": 100001,\r\n\t\t\"VehicleId\": 2,\r\n\t\t\"Position\": {\r\n\t\t\t\"Latitude\": 47.61705102765316,\r\n\t\t\t\"Longitude\": -122.14291865504012 \r\n\t\t},\r\n\t\t\"TimestampUTC\": \"20201031\"\r\n\t}\r\n}\r\n*/\r\ncreate   procedure [web].[AddBusData]\r\n@payload nvarchar(max) \r\nas\r\nbegin\t\r\n\tset nocount on\r\n\tset xact_abort on\r\n\tset tran isolation level serializable\r\n\r\n\tbegin tran\r\n\r\n\tif (isjson(@payload) != 1) begin;\r\n\t\tthrow 50000, 'Payload is not a valid JSON document', 16;\r\n\tend;\r\n\r\n\tdeclare @ids as table (id int);\r\n\r\n\t-- insert bus data\r\n\tinsert into dbo.[BusData] \r\n\t\t([DirectionId], [RouteId], [VehicleId], [Location], [TimestampUTC])\r\n\toutput\r\n\t\tinserted.Id into @ids\r\n\tselect\r\n\t\t[DirectionId], \r\n\t\t[RouteId], \r\n\t\t[VehicleId], \r\n\t\tgeography::Point([Latitude], [Longitude], 4326) as [Location], \r\n\t\t[TimestampUTC]\r\n\tfrom\r\n\t\topenjson(@payload) with (\r\n\t\t\t[DirectionId] int,\r\n\t\t\t[RouteId] int,\r\n\t\t\t[VehicleId] int,\r\n\t\t\t[Latitude] decimal(10,6) '$.Position.Latitude',\r\n\t\t\t[Longitude] decimal(10,6) '$.Position.Longitude',\r\n\t\t\t[TimestampUTC] datetime2(7)\r\n\t\t);\r\n\t\t\r\n\t-- Get details of inserted data\r\n\tselect * into #t from dbo.[BusData] bd where bd.id in (select i.id from @ids i);\r\n\r\n\t-- Find geofences in which the vehicle is in\r\n\tselect \r\n\t\tt.Id as BusDataId,\r\n\t\tt.[VehicleId],\r\n\t\tt.[DirectionId],\r\n\t\tt.[TimestampUTC],\r\n\t\tt.[RouteId],\t\t\r\n\t\tg.Id as GeoFenceId\r\n\tinto\r\n\t\t#g\r\n\tfrom \r\n\t\tdbo.GeoFences g \r\n\tright join\r\n\t\t#t t on g.GeoFence.STContains(t.[Location]) = 1;\r\n\r\n\t-- Calculate status\r\n\tselect\r\n\t\tc.BusDataId,\r\n\t\tcoalesce(a.[GeoFenceId], c.[GeoFenceId]) as GeoFenceId,\r\n\t\tcoalesce(a.[DirectionId], c.[DirectionId]) as DirectionId,\r\n\t\tcoalesce(a.[VehicleId], c.[VehicleId]) as VehicleId,\r\n\t\tc.[RouteId],\r\n\t\tc.[TimestampUTC],\r\n\t\tcase \r\n\t\t\twhen a.GeoFenceId is null and c.GeoFenceId is not null then 'Enter'\r\n\t\t\twhen a.GeoFenceId is not null and c.GeoFenceId is null then 'Exit'\t\t\r\n\t\tend as [Status]\r\n\tinto\r\n\t\t#s \r\n\tfrom\r\n\t\t#g c\r\n\tfull outer join\r\n\t\tdbo.GeoFencesActive a on c.DirectionId = a.DirectionId and c.VehicleId = a.VehicleId;\r\n\t\r\n\t-- Delete exited geofences\r\n\tdelete \r\n\t\ta\r\n\tfrom\r\n\t\tdbo.GeoFencesActive a\r\n\tinner join\r\n\t\t#s s on a.VehicleId = s.VehicleId and s.DirectionId = a.DirectionId and s.[Status] = 'Exit';\r\n\r\n\t-- Insert entered geofences\r\n\tinsert into dbo.GeoFencesActive \r\n\t\t([GeoFenceId], [DirectionId], [VehicleId])\r\n\tselect\r\n\t\t[GeoFenceId], [DirectionId], [VehicleId]\r\n\tfrom\r\n\t\t#s s\r\n\twhere \r\n\t\ts.[Status] = 'Enter';\r\n\r\n\t-- Insert Log\r\n\tinsert into dbo.GeoFenceLog \r\n\t\t(GeoFenceId, BusDataId, [RouteId], [VehicleId], [TimestampUTC], [Status])\r\n\tselect\r\n\t\tGeoFenceId, BusDataId, [RouteId], [VehicleId], [TimestampUTC], isnull([Status], 'In')\r\n\tfrom\r\n\t\t#s s\r\n\twhere\r\n\t\ts.[GeoFenceId] is not null\r\n\tand\r\n\t\ts.[BusDataId] is not null\r\n\r\n\t-- Return Entered or Exited geofences\r\n\tselect\r\n\t((\r\n\t\tselect\r\n\t\t\ts.[BusDataId],  \r\n\t\t\ts.[VehicleId],\r\n\t\t\ts.[DirectionId],  \r\n\t\t\ts.[RouteId], \r\n\t\t\tr.[ShortName] as RouteName,\r\n\t\t\ts.[GeoFenceId], \r\n\t\t\tgf.[Name] as GeoFence,\r\n\t\t\ts.[Status] as GeoFenceStatus,\r\n\t\t\ts.[TimestampUTC]\r\n\t\tfrom\r\n\t\t\t#s s\r\n\t\tinner join\r\n\t\t\tdbo.[GeoFences] gf on s.[GeoFenceId] = gf.[Id]\r\n\t\tinner join\r\n\t\t\tdbo.[Routes] r on s.[RouteId] = r.[Id]\r\n\t\twhere\r\n\t\t\ts.[Status] is not null and s.[GeoFenceId] is not null\r\n\t\tfor \r\n\t\t\tjson path\r\n\t)) as ActivatedGeoFences;\r\n\r\n\tcommit\r\nend",
    "EXTERNAL_NAME": "NULL",
    "EXTERNAL_LANGUAGE": "NULL",
    "PARAMETER_STYLE": "NULL",
    "IS_DETERMINISTIC": "NO",
    "SQL_DATA_ACCESS": "MODIFIES",
    "IS_NULL_CALL": "NULL",
    "SQL_PATH": "NULL",
    "SCHEMA_LEVEL_ROUTINE": "YES",
    "MAX_DYNAMIC_RESULT_SETS": "-1",
    "IS_USER_DEFINED_CAST": "NO",
    "IS_IMPLICITLY_INVOCABLE": "NO",
    "CREATED": "2023-04-27 23:06:55.360",
    "LAST_ALTERED": "2023-04-27 23:06:55.360"
  },
  {
    "SPECIFIC_CATALOG": "bus-db",
    "SPECIFIC_SCHEMA": "web",
    "SPECIFIC_NAME": "GetMonitoredRoutes",
    "ROUTINE_CATALOG": "bus-db",
    "ROUTINE_SCHEMA": "web",
    "ROUTINE_NAME": "GetMonitoredRoutes",
    "ROUTINE_TYPE": "PROCEDURE",
    "MODULE_CATALOG": "NULL",
    "MODULE_SCHEMA": "NULL",
    "MODULE_NAME": "NULL",
    "UDT_CATALOG": "NULL",
    "UDT_SCHEMA": "NULL",
    "UDT_NAME": "NULL",
    "DATA_TYPE": "NULL",
    "CHARACTER_MAXIMUM_LENGTH": "NULL",
    "CHARACTER_OCTET_LENGTH": "NULL",
    "COLLATION_CATALOG": "NULL",
    "COLLATION_SCHEMA": "NULL",
    "COLLATION_NAME": "NULL",
    "CHARACTER_SET_CATALOG": "NULL",
    "CHARACTER_SET_SCHEMA": "NULL",
    "CHARACTER_SET_NAME": "NULL",
    "NUMERIC_PRECISION": "NULL",
    "NUMERIC_PRECISION_RADIX": "NULL",
    "NUMERIC_SCALE": "NULL",
    "DATETIME_PRECISION": "NULL",
    "INTERVAL_TYPE": "NULL",
    "INTERVAL_PRECISION": "NULL",
    "TYPE_UDT_CATALOG": "NULL",
    "TYPE_UDT_SCHEMA": "NULL",
    "TYPE_UDT_NAME": "NULL",
    "SCOPE_CATALOG": "NULL",
    "SCOPE_SCHEMA": "NULL",
    "SCOPE_NAME": "NULL",
    "MAXIMUM_CARDINALITY": "NULL",
    "DTD_IDENTIFIER": "NULL",
    "ROUTINE_BODY": "SQL",
    "ROUTINE_DEFINITION": "/*\r\n\tReturn the Routes (and thus the buses) to monitor\r\n*/\r\ncreate   procedure [web].[GetMonitoredRoutes]\r\nas\r\nbegin\r\n\tselect \r\n\t((\t\r\n\t\tselect RouteId from dbo.[MonitoredRoutes] for json auto\r\n\t)) as MonitoredRoutes\r\nend",
    "EXTERNAL_NAME": "NULL",
    "EXTERNAL_LANGUAGE": "NULL",
    "PARAMETER_STYLE": "NULL",
    "IS_DETERMINISTIC": "NO",
    "SQL_DATA_ACCESS": "MODIFIES",
    "IS_NULL_CALL": "NULL",
    "SQL_PATH": "NULL",
    "SCHEMA_LEVEL_ROUTINE": "YES",
    "MAX_DYNAMIC_RESULT_SETS": "-1",
    "IS_USER_DEFINED_CAST": "NO",
    "IS_IMPLICITLY_INVOCABLE": "NO",
    "CREATED": "2023-04-27 23:07:10.343",
    "LAST_ALTERED": "2023-04-27 23:07:47.437"
  },
  {
    "SPECIFIC_CATALOG": "bus-db",
    "SPECIFIC_SCHEMA": "web",
    "SPECIFIC_NAME": "GetMonitoredBusData",
    "ROUTINE_CATALOG": "bus-db",
    "ROUTINE_SCHEMA": "web",
    "ROUTINE_NAME": "GetMonitoredBusData",
    "ROUTINE_TYPE": "PROCEDURE",
    "MODULE_CATALOG": "NULL",
    "MODULE_SCHEMA": "NULL",
    "MODULE_NAME": "NULL",
    "UDT_CATALOG": "NULL",
    "UDT_SCHEMA": "NULL",
    "UDT_NAME": "NULL",
    "DATA_TYPE": "NULL",
    "CHARACTER_MAXIMUM_LENGTH": "NULL",
    "CHARACTER_OCTET_LENGTH": "NULL",
    "COLLATION_CATALOG": "NULL",
    "COLLATION_SCHEMA": "NULL",
    "COLLATION_NAME": "NULL",
    "CHARACTER_SET_CATALOG": "NULL",
    "CHARACTER_SET_SCHEMA": "NULL",
    "CHARACTER_SET_NAME": "NULL",
    "NUMERIC_PRECISION": "NULL",
    "NUMERIC_PRECISION_RADIX": "NULL",
    "NUMERIC_SCALE": "NULL",
    "DATETIME_PRECISION": "NULL",
    "INTERVAL_TYPE": "NULL",
    "INTERVAL_PRECISION": "NULL",
    "TYPE_UDT_CATALOG": "NULL",
    "TYPE_UDT_SCHEMA": "NULL",
    "TYPE_UDT_NAME": "NULL",
    "SCOPE_CATALOG": "NULL",
    "SCOPE_SCHEMA": "NULL",
    "SCOPE_NAME": "NULL",
    "MAXIMUM_CARDINALITY": "NULL",
    "DTD_IDENTIFIER": "NULL",
    "ROUTINE_BODY": "SQL",
    "ROUTINE_DEFINITION": "/*\r\n\tReturn last geospatial data for bus closest to the GeoFence\r\n*/\r\ncreate   procedure [web].[GetMonitoredBusData]\r\n@routeId int,\r\n@geofenceId int\r\nas\r\nbegin\r\n\twith cte as\r\n\t(\r\n\t\t-- Get the latest location of all the buses in the given route\r\n\t\tselect top (1) with ties \r\n\t\t\t*  \r\n\t\tfrom \r\n\t\t\tdbo.[BusData] \r\n\t\twhere\r\n\t\t\t[RouteId] = @routeId\r\n\t\torder by \r\n\t\t\t[ReceivedAtUTC] desc\r\n\t),\r\n\tcte2 as\r\n\t(\r\n\t\t-- Get the closest to the GeoFence\r\n\t\tselect top (1)\r\n\t\t\tc.[VehicleId],\r\n\t\t\tgf.[GeoFence],\r\n\t\t\tc.[Location].STDistance(gf.[GeoFence]) as d\r\n\t\tfrom\r\n\t\t\t[cte] c\r\n\t\tcross join\r\n\t\t\tdbo.[GeoFences] gf\r\n\t\twhere\r\n\t\t\tgf.[Id] = @geofenceId\r\n\t\torder by\r\n\t\t\td \r\n\t), cte3 as\r\n\t(\r\n\t-- Take the last 50 points \r\n\tselect top (50)\r\n\t\t[bd].[VehicleId],\r\n\t\t[bd].[DirectionId],\r\n\t\t[bd].[Location] as l,\r\n\t\t[bd].[Location].STDistance([GeoFence]) as d\r\n\tfrom\r\n\t\tdbo.[BusData] bd\r\n\tinner join\r\n\t\tcte2 on [cte2].[VehicleId] = [bd].[VehicleId]\r\n\torder by \r\n\t\tid desc\r\n\t)\r\n\t-- Return only the points that are withing 5 Km\r\n\tselect \r\n\t((\r\n\t\tselect\r\n\t\t\tgeography::UnionAggregate(l).ToString() as [busData],\r\n\t\t\t(select [GeoFence].ToString() from dbo.[GeoFences] where Id = @geofenceId) as [geoFence]\r\n\t\tfrom\r\n\t\t\tcte3\r\n\t\twhere\r\n\t\t\td < 5000\r\n\t\tfor json auto, include_null_values, without_array_wrapper\r\n\t)) as locationData\r\nend",
    "EXTERNAL_NAME": "NULL",
    "EXTERNAL_LANGUAGE": "NULL",
    "PARAMETER_STYLE": "NULL",
    "IS_DETERMINISTIC": "NO",
    "SQL_DATA_ACCESS": "MODIFIES",
    "IS_NULL_CALL": "NULL",
    "SQL_PATH": "NULL",
    "SCHEMA_LEVEL_ROUTINE": "YES",
    "MAX_DYNAMIC_RESULT_SETS": "-1",
    "IS_USER_DEFINED_CAST": "NO",
    "IS_IMPLICITLY_INVOCABLE": "NO",
    "CREATED": "2023-04-27 23:08:05.643",
    "LAST_ALTERED": "2023-04-27 23:08:05.643"
  }
]